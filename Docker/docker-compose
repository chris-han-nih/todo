version: '3.9'

services:

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
    - 6379:6379

  postgre:
    image: postgres:latest
    container_name: postgresql
    environment:
      POSTGRES_DB: nih
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1q2w3e4r
    ports:
    - 5432:5432
    volumes:
    - /Users/hannamil/Dropbox/docker/postgres_data:/var/lib/postgresql/data

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_DATABASE: nih
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: 1q2w3e4r
    ports:
    - 3306:3306
    volumes:
    - /Users/hannamil/Dropbox/docker/mysql_data:/var/lib/mysql

  mssql:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: mssql
    environment:
      ACCEPT_EULA: 1
      MSSQL_SA_PASSWORD: 1q2w3e4rQWER
    ports:
    - 1433:1433

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    hostname: schema-registry
    depends_on:
      - kafka-broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_INTERNAL://localhost:29092
      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka-broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    hostname: kafka-broker
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    hostname: kafka-connect
    ports:
    - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-broker:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
    depends_on:
    - zookeeper
    - kafka-broker
    - schema-registry

